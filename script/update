#!/bin/sh

set -e
[ -n "$DEBUG" ] && set -x

if [ "$1" = "--dry-run" ] || [ "$1" = "-n" ]; then
  dry_run="true"
  printf "Dry run mode\n\n"
  section_format="Checking for updates to %s..."
else
  section_format="Installing updates for %s..."
fi

if [ -t 1 ]; then
  section_format="$(tput setaf 2)$section_format$(tput sgr0)"
fi

script_dir=$(CDPATH='' cd -- "$(dirname -- "$0")" && pwd -P)
formulae_dir="$script_dir"/../Formula

section() {
  # shellcheck disable=SC2059
  printf "$section_format\n" "$1"
}

join_by() {
  local IFS="$1"; shift

  echo "$*"
}

# Ensure that Homebrew stuff (e.g. Ruby) is found first
# when updating formulae that depends on it
export PATH="/usr/local/bin:$PATH"

section "macOS"

if [ -n "$dry_run" ]; then
  softwareupdate --list
else
  softwareupdate --install --all
fi

section "Homebrew formulae"
brew update --force # https://github.com/Homebrew/brew/issues/1151

if [ -n "$dry_run" ]; then
  brew outdated

  section "Homebrew casks"
  brew cask outdated

  section "Mac App Store apps"
  mas outdated
else
  brew upgrade --ignore-pinned
  brew cleanup # separate step to preserve previous versions if above fails

  section "Homebrew casks"
  brew cask upgrade
  brew cleanup

  section "Mac App Store apps"
  mas upgrade
fi

if command -v circleci > /dev/null; then
  section "CircleCI CLI"

  if [ -n "$dry_run" ]; then
    circleci version 2>/dev/null | grep --color=no "newer" || echo "No updates"
  else
    circleci update
  fi
fi
