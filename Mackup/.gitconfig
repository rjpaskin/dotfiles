[core]
  quotepath = false
  autocrlf = input
  excludesfile = ~/.gitignore_global
  attributesFile = ~/.gitattributes
  editor = vim
[color]
  ui = true
  diff = auto
  status = auto
  branch = auto
[alias]
  branches = for-each-ref --sort=-committerdate --format=\"%(color:yellow)%(authordate:relative)\t%(color:blue)%(authorname)\t%(color:red)%(color:bold)%(refname:short)\" refs/remotes
  local-branches = !git branch -vv | cut -c 3- | awk '$3 !~/\\[/ { print $1 }'
  oldest-ancestor = !zsh -c 'diff --old-line-format='' --new-line-format='' <(git rev-list --first-parent "${1:-master}") <(git rev-list --first-parent "${2:-HEAD}") | head -1' -
  grep-branch        = "!f(){ git branch -a | sed -e 's/[ \\*]*//' | grep -v -e '\\->' | xargs git grep $@; };f "
  grep-branch-remote = "!f(){ git branch -a | sed -e 's/[ \\*]*//' | grep -v -e '\\->' | grep '^remotes' | xargs git grep $@; };f"
  grep-branch-local  = "!f(){ git branch -a | sed -e 's/[ \\*]*//' | grep -v -e '\\->' -e '^remotes' | xargs git grep $@;  };f "
  checkout-at = "!f() { rev=$(git rev-list -1 --before=\"$1\" ${2:-master}) && git checkout \"$rev\"; }; f"
  rename-branch = "!f() { git branch -m $1 $2; git push origin :$1; git push --set-upstream origin $2; }; f"
  # Recreate branch on top of master
  recreate-branch = "!f() { [[ -n $@ ]] && git checkout \"$@\" && git checkout master && git branch -D \"$@\" && git checkout -b \"$@\"; }; f"
  up = "!echo 'Fetching from remotes...' && git fetch --all --quiet && git ffwd"
[filter "lfs"]
  clean = git-lfs clean %f
  smudge = git-lfs smudge %f
  required = true
[merge "railsschema"]
  name = newer Rails schema version
  driver = merge-rails-schema %O %A %B %L
[include]
  path = ~/.gitconfig.local
